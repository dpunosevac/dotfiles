#!/bin/zsh

#
# These functions integrate with lf file manager, although they can be used separately
# They are somewhat buggy (limitations of mv command without deleting same name files, etc.), but they are good for my use
#

function yellow_echo() {
  echo -e "\033[0;33m[Trash] $1\033[0m"
}

function red_echo() {
  echo -e "\033[0;31m[Trash] $1\033[0m"
}

function trash() {
  [[ ! -d ~/.theoshell/trash ]] && mkdir -p ~/.theoshell/trash
  if [[ -z $@ ]]; then red_echo 'Please select file(s) to trash!'; return; fi
  for file in $@; do
    mv $file ~/.theoshell/trash && yellow_echo ":) $file moved to trash!" ||red_echo ":( Failed to move $file to trash"
  done
}

function trash_print() {
  if [[ ! -d ~/.theoshell/trash ]]; then
    red_echo 'Trash direcoty does not exist! Execute LF file manager with my config to create one'
  else
    # You can use {.[!.]*,*}, but that does not exist if directory does not contain BOTH .* and *
    # Separate for loop will not work since ZSH will terminate if no wild card match is found (requires nullglob)
    # So settle for *
    for file in ~/.theoshell/trash/*
    do
      yellow_echo "$file"
    done
  fi
}

function trash_empty() {
  if [[ ! -d ~/.theoshell/trash ]]; then
    red_echo 'Trash direcoty does not exist! Execute LF file manager with my config or trash() command to create one'
  else
    for file in ~/.theoshell/trash/*
    do
      yellow_echo "Removing $file in trash..."
      rm -rf $file
    done
  fi
}

