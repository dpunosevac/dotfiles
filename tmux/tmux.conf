############################
#  _
# | | By Theo
# | |_ _ __ ___  _   ___  __
# | __| '_ ` _ \| | | \ \/ /
# | |_| | | | | | |_| |>  <
#  \__|_| |_| |_|\__,_/_/\_\
#############################

# {{{ Basic settings
set -g default-terminal "xterm-256color" # Alternative: "tmux-256color"
set -g mouse on
set -g allow-rename off
set -g history-limit 10000
set -g base-index 1 # Oh no anti programmer behavior oh no
set -g escape-time 50 # Default 500 milsec, because back in the day escape sequence blah blah
set-window-option -g pane-base-index 1
# }}}

# {{{ Keybindings - bind -n binds without prefix
unbind r # Default <prefix>r
bind C-r source-file ~/.tmux.conf \; display-message "Reloading ~/.tmux.conf"

# Prefix
unbind-key C-b
set -g prefix C-a
# bind-key and bind are equivalent
bind-key C-a send-prefix # This sends <C-a><C-a> to the program

# Pane
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind Left resize-pane -L 5
bind Down resize-pane -D 5
bind UP resize-pane -U 5
bind Right resize-pane -R 5
unbind '"'
bind | split-window -h -c "#{pane_current_path}"
unbind %
bind - split-window -v -c "#{pane_current_path}"

# New, kill, and renaming window/pane
unbind c
bind n new-window -c "#{pane_current_path}"
unbind & # Default binding for killing a window
unbind x # Default binding for killing a pane
bind x confirm-before -p "Kill pane #P? (y/n)" kill-pane
unbind ,
bind r command-prompt -I"#W" { rename-window -- '%%' }

# Redindex window (also look in to <prefix>!)
bind C-p swap-window -t :-1 \; previous-window
bind C-n swap-window -t :+1 \; next-window
unbind . # Default binding for moving (re-indexing) window
unbind m # Default binding for marking a window
# Delete colon and type the session name (make sure to rename session to non-numeric before) to move b/w session
bind m command-prompt -I":" "move-window -t '%%' \; select-window -t '%%'"
# You can do session swap just like move, but it's honestly not worth it since what's swapped is selected random
bind C-m command-prompt -p "Swap current window with:" "swap-window -t :'%%' \; select-window -t :'%%'"

# Moving panes between windows
bind C-s command-prompt -p "Send pane to:"  "join-pane -t :'%%'" # Have to have colon, or it will send to a session
bind C-j command-prompt -p "Join pane from:"  "join-pane -s :'%%'"

# Maximizing a pane
unbind z # Default binding for maximizing (zooming) the pane
unbind f # Default binding for finding a pane
bind f resize-pane -Z

# A floating window for help doc
unbind ?
bind ? display-popup -E -h 70% -w 70% "vim --clean -R ~/dotfiles/tmux/tmux-help-doc.md"
# }}}

# {{{ Copy mode
set-window-option -g mode-keys vi
# tmux list-keys | grep "send-keys -X cancel" shows that ESC is bound to canc in copy-mode but not in copy-mode-vi
unbind -T copy-mode-vi q; # Copy mode uses a separate command sets, so we have to use send-keys -X
bind -T copy-mode-vi Escape send-keys -X cancel

unbind -T copy-mode-vi Space;
bind -T copy-mode-vi v send-keys -X begin-selection
unbind -T copy-mode-vi Enter;
bind -T copy-mode-vi y send-keys -X copy-selection
# }}}

# {{{ Dracula color scheme
DRACULA_BG=#282a36
DRACULA_CURR_LINE=#44475a
DRACULA_FG=#f8f8f2
DRACULA_COMMENT=#6272a4
DRACULA_CYAN=#8be9fd
DRACULA_GREEN=#50fa7b
DRACULA_ORANGE=#ffb86c
DRACULA_PINK=#ff79c6
DRACULA_PURPLE=#bd93f9
DRACULA_RED=#ff5555
DRACULA_YELLOW=#f1fa8c

set -g pane-border-style fg=$DRACULA_COMMENT
set -g pane-active-border-style fg=$DRACULA_ORANGE
set -g message-style bg=$DRACULA_CURR_LINE,fg=$DRACULA_CYAN
# }}}

# {{{ Status bar settings
set -g status on
set -g status-position top
set -g status-keys vi
set -g status-interval 2 # Update status bar every 3 seconds
set -g status-style bg=$DRACULA_BG,fg=$DRACULA_FG

# Left side of the status bar
set -g status-left-style default
set -g status-left-length 45
set -g status-left "#[fg=$DRACULA_COMMENT]▊ "
set -ga status-left "#[fg=$DRACULA_PURPLE]❐ #S " # -a for appending, #S is session name
set -ga status-left "#[fg=$DRACULA_COMMENT]| "
set -ga status-left "#[fg=$DRACULA_PINK] #h " # Host name (#H for host name with domain)
set -ga status-left "#[fg=$DRACULA_COMMENT]| "
set -ga status-left "#[fg=$DRACULA_CYAN]#/\$ #{pane_current_command} "
set -ga status-left "#[fg=$DRACULA_COMMENT]▊"
#set -ga status-left "          "

# Right side of the status bar
set -g status-right-style default
set -g status-right-length 45
set -g status-right "#[fg=$DRACULA_COMMENT]▊ "
# Uptime returns
#  8:27  up 1 day, 17:06, 1 user, load averages: 1,01 0,87 0,79 - Mac
#  1:33  up  2:37, 1 user, load averages: 1.75 1.74 1.65 - Mac
# 01:35:06 up 291 days, 16:08, 201 users,  load average: 4.14, 4.76, 5.48 - Deb
# grep -ohe (o for printing only the matching part, e for egrep, h for no file name printing - not necessary)
# sed to remove ,
# awk to print out second and third column
# Now this introduces a problem, mainly if the uptime is before 1 day, Mac prints HH:MM, x user... format. So it will print out HH:MM x. But well, deal with it
set -ga status-right "#[fg=$DRACULA_RED] up: #(uptime | grep -ohe 'up .*' | sed 's/,//g' | awk '{ print $2\" \"$3 \" \"}')"
set -ga status-right "#[fg=$DRACULA_COMMENT]| "
set -ga status-right "#[fg=$DRACULA_ORANGE] %m-%d #[fg=$DRACULA_YELLOW]%H:%M "
set -ga status-right "#[fg=$DRACULA_COMMENT]▊"

# Center window list
set -g status-justify centre # position of window list component - British
set -g window-status-current-format "#[bg=$DRACULA_BG,fg=$DRACULA_ORANGE]"
set -ga window-status-current-format "#[bg=$DRACULA_ORANGE,fg=$DRACULA_CURR_LINE] #I #W"
set -ga window-status-current-format "#[bg=$DRACULA_BG,fg=$DRACULA_ORANGE]"
set -g window-status-format "#[bg=$DRACULA_BG,fg=$DRACULA_COMMENT]"
set -ga window-status-format "#[bg=$DRACULA_COMMENT,fg=$DRACULA_CURR_LINE]#I #W"
set -ga window-status-format "#[bg=$DRACULA_BG,fg=$DRACULA_COMMENT]"
# }}}

