"===============================================================================
" Theo vimrc for note taking
"          (___)
"   ____
" _\___ \  |\_/|
"\     \ \/ , , \ ___
" \__   \ \ ="= //|||\
"  |===  \/____)_)||||
"  \______|    | |||||
"      _/_|  | | =====
"     (_/  \_)_)
"  _________________
" (                _)
"  (__   '          )
"    (___    _____)
"        '--'
" Lost all 9 lives
" https://www.asciiart.eu/animals/cats - Shanaka Dias
"===============================================================================

" {{{ Vim Plug
let data_dir = has('nvim') ? stdpath('data') . '/site' : '~/.vim'
if empty(glob(data_dir . '/autoload/plug.vim'))
  silent execute '!curl -fLo '.data_dir.'/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif
call plug#begin()
Plug 'vimwiki/vimwiki'
Plug 'fadein/vim-figlet'
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'
call plug#end()
" }}}

" {{{ Base Settings
set number relativenumber ruler colorcolumn=80
set cursorline cursorcolumn wildmenu termguicolors bg=dark
try
  colo drakai
catch
  colo darkblue
endtry
set tabstop=2 shiftwidth=2 expandtab autoindent
set mouse=a
set list listchars=tab:!>,trail:␣,nbsp:+
filetype on
syntax on
set hlsearch incsearch shortmess-=S
set ignorecase smartcase
set scrolloff=7
set foldmethod=marker foldlevel=0
set spell spelllang=en_us spellsuggest=best,8
" }}}

" {{{ Keybindings
nnoremap <SPACE> <Nop>
let mapleader=' '
inoremap jk <ESC>:write<CR>
inoremap ( ()<LEFT>
inoremap [ []<LEFT>
inoremap {<CR> {<CR>}<ESC>ko<TAB>
inoremap <C-h> <LEFT>
inoremap <C-j> <DOWN>
inoremap <C-k> <UP>
inoremap <C-l> <RIGHT>
nnoremap <leader>/ :let @/=''<CR>
nnoremap <leader>a gg<S-v>G
nnoremap <leader>h <C-W>h
nnoremap <leader>j <C-W>j
nnoremap <leader>k <C-W>k
nnoremap <leader>l <C-W>l
nnoremap <leader><LEFT> <C-w><
nnoremap <leader><DOWN> <C-w>-
nnoremap <leader><UP> <C-w>+
nnoremap <leader><RIGHT> <C-w>>
nnoremap n nzz
nnoremap N Nzz
tnoremap <ESC> <C-\><C-n>
inoremap <C-s> <C-g>u<ESC>[s1z=`]a<C-g>u
nnoremap <C-s> z=
nnoremap <leader>st :set spell!<CR>
" }}}

" {{{ Statusline
let g:currentmode={
  \ 'n' : 'Normal', 'no' : 'Normal·Operator Pending',
  \ 'v' : 'Visual', 'V' : 'V·Line', "\<C-V>" : 'V·Block',
  \ 's' : 'Select', 'S' : 'S·Line', "\<C-S>" : 'S·Block',
  \ 'i' : 'Insert', 'R' : 'Replace', 'Rv' : 'V·Replace',
  \ 'c' : 'Command', 'cv' : 'Vim Ex', 'ce' : 'Ex',
  \ 'r' : 'Prompt', 'rm' : 'More', 'r?' : 'Confirm',
  \ '!' : 'Shell', 't' : 'Terminal' }
set laststatus=2
set statusline=
set statusline+=%0*\[%n] " Buffer num
set statusline+=%1*\ %<%F\  " File ppath
set statusline+=%2*\ %y\  " FileType
set statusline+=%3*\ %{''.(&fenc!=''?&fenc:&enc).''} " Encoding
set statusline+=%3*\ %{(&bomb?\",BOM\":\"\")}\  " Encoding2
set statusline+=%4*\ %{&ff}\  " FileFormat (dos/unix..)
set statusline+=%5*\ %#BLUE#[%{toupper(g:currentmode[mode()])}] " Current mode
set statusline+=%6*\ %=\ row:%l/%L\  " Row num
set statusline+=%7*\ col:%03c\  " Column num
set statusline+=%8*\ \ %m%r%w\ %P\  " + for change in buffer, top/bottom
set statusline+=%9*\ %#ORANGE#%{'Messing'}\ %{'w'}\ %{'vimrc'}\ %{'againʕ•́ᴥ•̀?'}
" }}}

" {{{ netrw
autocmd VimEnter * :Vexplore | wincmd p
let g:netrw_banner=0 " No guide on the top, turn on if error occurs
let g:netrw_liststyle=0 " 0 simple, 1 detailed, 2 thick, 3 tree
let g:netrw_browse_split=3
let g:netrw_winsize = 15
aug netrw_auto_close
  au!
  au WinEnter * if tabpagenr('$') == 1  && winnr('$') == 1
  \ && getbufvar(winbufnr(winnr()), "&filetype") == "netrw" | quit | endif
aug END
" }}}

