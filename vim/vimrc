"___________.__                   ____   ____.__
"\__    ___/|  |__   ____  ____   \   \ /   /|__| ____________   ____
"  |    |   |  |  \_/ __ \/  _ \   \   Y   / |  |/     \_  __ \_/ ___\
"  |    |   |   Y  \  ___(  <_> )   \     /  |  |  Y Y  \  | \/\  \___
"  |____|   |___|  /\___  >____/     \___/   |__|__|_|  /__|    \___  >
"                \/     \/                            \/            \/
"


" Vim Plug --- {{{
call plug#begin()
  Plug 'dracula/vim'
  " Plug 'ghifarit53/tokyonight-vim'
  Plug 'scrooloose/nerdtree'
call plug#end()
" }}}


" Visual Related Setting --- {{{
set number norelativenumber ruler colorcolumn=80 " Yes I hate relativenumber
set cursorline cursorcolumn
set wildmenu
set termguicolors
let g:dracula_colorterm=0
let g:dracula_italic=0 " Enable this if some syntax are weirdly highlighted
colorscheme dracula
" }}}


" Text Edit Related Settings --- {{{
let mapleader=','
set tabstop=2 shiftwidth=2 expandtab autoindent
set mouse=a
set list listchars=tab:>\ ,trail:‚ê£,nbsp:+
" }}}


" Syntax Related Settings --- {{{
filetype on
syntax on
set hlsearch incsearch " Highlight and non-submit  search results
set so=7 "Keep 7 lines visible at the top and bottom when scrolling
" Auto fold
set foldmethod=indent foldlevel=1
augroup filetype_vim
  autocmd!
  autocmd FileType vim setlocal foldmethod=marker
augroup END
" }}}


" Keybinding Related Settings --- {{{
" Automatic closer for parenthesis, brackets, et
inoremap ( ()<left>
inoremap [ []<left>
" Have <tab> after ko if needed
inoremap {<CR> {<CR>}<ESC>ko
" Caps lock for ESC overrated
inoremap jj <ESC>
" Split pane navigation
nnoremap H <C-W>h
nnoremap J <C-W>j
nnoremap K <C-W>k
nnoremap L <C-W>l
" ESC to escape terminal
tnoremap <ESC> <C-\><C-n>
" Automatic search result center
nmap n nzz
nmap N Nzz
" }}}


" Status Bar related settings --- {{{
set laststatus=2
function! HighlightSearch()
  if &hls
    return 'H'
  else
    return ''
  endif
endfunction
set statusline=
set statusline+=%7*\[%n]                                  "buffernr
set statusline+=%1*\ %<%F\                                "File+path
set statusline+=%2*\ %y\                                  "FileType
set statusline+=%3*\ %{''.(&fenc!=''?&fenc:&enc).''}      "Encoding
set statusline+=%3*\ %{(&bomb?\",BOM\":\"\")}\            "Encoding2
set statusline+=%4*\ %{&ff}\                              "FileFormat (dos/unix..)
set statusline+=%5*\ %{&spelllang}\%{HighlightSearch()}\  "Spellanguage & Highlight on?
set statusline+=%8*\ %=\ row:%l/%L\ (%03p%%)\             "Rownumber/total (%)
set statusline+=%9*\ col:%03c\                            "Colnr
set statusline+=%0*\ \ %m%r%w\ %P\ \                      "Modified? Readonly? Top/bot
" }}}


" NERDTree Related Settings --- {{{
" Start NERDTree and put the cursor back in the other window.
autocmd VimEnter * NERDTree | wincmd p
" Exit Vim if NERDTree is the only window remaining in the only tab.
autocmd BufEnter * if tabpagenr('$') == 1 && winnr('$') == 1 && exists('b:NERDTree') && b:NERDTree.isTabTree() | quit | endif
let NERDTreeShowHidden=1
let NERDTreeMinimalUI = 1
let NERDTreeDirArrows = 1
" }}}


" CS240 Work Environment --- {{{
" By Theo Park, special thanks to Shriansh Chari
function CS240(hwNum)
  exec 'cd ' . $HOME. '/cs240/' . a:hwNum . '/'
  set colorcolumn=80
  vs
  " R source code file
  winc l
  exec 'open '. a:hwNum . '.c'
  " Top L terminal
  winc h
  term
  5winc+
  " Bottom L header file
  winc j
  exec 'open '. a:hwNum . '.h'
  winc l
endfunction
" }}}
