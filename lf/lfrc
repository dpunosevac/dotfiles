# figlet -f avatar lf
#  _     _____
# / \   /    /
# | |   |  __\
# | |_/\| |
# \____/\_/
#
# Official Document: https://pkg.go.dev/github.com/gokcehan/lf

# Like vim settings, put no in front ot the arrtibute to negate
set drawbox
set hidden
set icons
set ignorecase
set incsearch
set nomouse
set number
set preview
set relativenumber
set smartcase

# Automatically create trash folder upon the startup
${{ mkdir -p ~/.trash-lf }}
# $f = current cursor $fs = selected files $fx = $f or $fs
cmd trash ${{ IFS="$(printf '\n\t')"; mv $fx ~/.trash-lf }}

# Inspiration from https://github.com/BrodieRobertson/dotfiles/blob/master/config/lf/lfrc
cmd mkdir %{{
  if [[ -z $1 ]]; then
    printf ' Directory Name: '
    read ans
    mkdir $ans
  else
    mkdir $1
  fi
}}

# % is executing within LF, $ is executing in the shell
# think about what happens if you try to open neovim in LF - yes it will break, very badly
cmd mkfile ${{
  if [[ -z $1 ]]; then
    printf ' File Name: '
    read ans
    nvim $ans
  else
    nvim $1
  fi
}}

cmd chmod %{{
  echo - n ' Mode Bits: '
  read ans

  for file in $fx; do
    chmod $ans $file
  done

  lf -remote 'send reload'
}}

cmd fzf_jump ${{
  res="$(find . -maxdepth 3 | fzf --reverse --header='Jump to location')"
  if [ -f "$res" ]; then
    cmd="select"
  elif [ -d "$res" ]; then
    cmd="cd"
  fi
  lf -remote "send $id $cmd \"$res\""
}}

# Archive commands
cmd unarchive ${{
  case "$f" in
      *.zip) unzip "$f" ;;
      *.tar.gz) tar -xzvf "$f" ;;
      *.tar.bz2) tar -xjvf "$f" ;;
      *.tar) tar -xvf "$f" ;;
      *) echo "Unsupported format" ;;
  esac
}}

cmd zip %zip -r "$f" "$f"
cmd tar %tar cvf "$f.tar" "$f"
cmd targz %tar cvzf "$f.tar.gz" "$f"
cmd tarbz2 %tar cjvf "$f.tar.bz2" "$f"

# Reference for default bindings and removal of some
# Default bindings that I really like:
# quit                     (default 'q')
# up                       (default 'k' and '<up>')
# half-up                  (default '<c-u>')
# page-up                  (default '<c-b>' and '<pgup>')
# scroll-up                (default '<c-y>')
# down                     (default 'j' and '<down>')
# half-down                (default '<c-d>')
# page-down                (default '<c-f>' and '<pgdn>')
# scroll-down              (default '<c-e>')
# updir                    (default 'h' and '<left>')
# open                     (default 'l' and '<right>')
# jump-next                (default ']')
# jump-prev                (default '[')
# top                      (default 'gg' and '<home>')
# bottom                   (default 'G' and '<end>')
# high                     (default 'H')
# middle                   (default 'M')
# low                      (default 'L')
# invert                   (default 'v')
# unselect                 (default 'u')
# copy                     (default 'y')
# cut                      (default 'd')
# paste                    (default 'p')
# clear                    (default 'c')
# redraw                   (default '<c-l>')
# reload                   (default '<c-r>')
# rename         (modal)   (default 'r')
# read           (modal)   (default ':')
# shell          (modal)   (default '$')
# shell-pipe     (modal)   (default '%')
# shell-wait     (modal)   (default '!')
# shell-async    (modal)   (default '&')
# search         (modal)   (default '/')
# search-back    (modal)   (default '?')
# search-next              (default 'n')
# search-prev              (default 'N')

map f # find           (modal)   (default 'f')
map F # find-back      (modal)   (default 'F')
map ; # find-next                (default ';')
map , # find-prev                (default ',')
map m # mark-save      (modal)   (default 'm')
# mark-load      (modal)   (default "'")
map '
# mark-remove    (modal)   (default '"')
map "

# Custom bindings
map ~ cd ~

map ff fzf_jump
map md mkdir
map mf mkfile
map mo chmod
map DD trash

